<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <title>zus.ai</title>
  <link rel="icon" href="assets/images/favicon.ico" type="image/x-icon" />
  <link rel="stylesheet" href="assets/css/video-js.min.css">
  <link rel="stylesheet" href="assets/css/bootstrap.min.css">
  <!--    <link rel="stylesheet" href="assets/css/jquery.fullPage.css">-->
  <link href="assets/css/video-js.min.css" rel="stylesheet">
  <link rel="stylesheet" href="assets/css/index.css">
  <style>
    .vjs-poster {
      position: static;
      height: 100vh;
      display: block;
    }
    .video-tip {
      top: 50%;
      margin-top: -50px;
    }
  </style>
</head>
<body>
<!-- 导航   -->
<nav class="navbar navbar-default navbar-fixed-top" role="navigation">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse"
              data-target="#example-navbar-collapse"   aria-expanded="false">
        <span class="sr-only">切换导航</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="#"><img src="assets/images/logo.svg"></a>
      <p class="pc-show zus-title">EFFICIENCY & PROFITABILITY, SUPERCHARGED</p>
    </div>
    <div class="pc-nav collapse" aria-expanded="false" id="example-navbar-collapse">
      <ul class="nav navbar-nav">
        <li class="active"><a class="home" href="#home">Home</a></li>
        <li><a class="solution" href="#solution">Solutions</a></li>
        <li><a class="roi" href="#roi">ROI</a></li>
        <li><a target="_blank" href="<%= '/login' %>">Login</a></li>
      </ul>
    </div>
  </div>
</nav>
<div class="m-show m-title zus-title">
  EFFICIENCY & PROFITABILITY, SUPERCHARGED
</div>
<div class="nav-tip">

</div>
<div class="main-content">
  <div class="module-home row section" id="home">
    <div class="right col-sm-7 col-xs-12 col-md-push-5">
      <div class="video-tip">
        <img src="assets/images/logo.svg" width="20%">
        <p>connected lot management</p>
      </div>
      <!--            <video id="example_video_1" class="video-js vjs-default-skin" controls preload="none" poster="assets/images/video.jpg">-->
      <!--                <source src="http://vjs.zencdn.net/v/oceans.mp4" type="video/mp4">-->
      <!--            </video>-->
      <div class="vjs-poster" tabindex="-1" aria-disabled="false" style="height:100vh;background-image: url('assets/images/video.jpg')"></div>
      <!--            <div class="video-watch-tip">-->
      <!--                watch video-->
      <!--            </div>-->
    </div>
    <div class="left col-sm-5 col-xs-12 col-md-pull-7">
      <div class="video-content">
        <p><span class="weight-font">ZUS</span>.ai connected service platform offers unique values to dealers through the combination of award-winning hardware and easy-to-use software. Apply for a free trial now and start to boost your performance instantly.</p>
        <div>
          <form method="POST" action="https://nonda566.activehosted.com/proc.php" id="_form_68_" class="_form _form_68 _inline-form  _dark" novalidate>
            <input type="hidden" name="u" value="68" />
            <input type="hidden" name="f" value="68" />
            <input type="hidden" name="s" />
            <input type="hidden" name="c" value="0" />
            <input type="hidden" name="m" value="0" />
            <input type="hidden" name="act" value="sub" />
            <input type="hidden" name="v" value="2" />
            <div class="_form-content">
              <div class="_form_element _x76950146 _full_width " >
                <div class="_field-wrapper">
                  <input type="text" name="email" placeholder="Enter your email to get free trail" required/>
                </div>
              </div>
              <button id="_form_68_submit" class="_submit" type="submit">
                GO
              </button>
              <div class="_clear-element">
              </div>
            </div>
            <div class="_form-thank-you" style="display:none;">
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
  <div class="module-solution section" id="solution"  >
    <div class="solution-title m-show">
      REASONS TO TRY ZUS.AI CONNECTED LOT MANAGEMENT
    </div>
    <div class="row middle m-show">
      <div class="content">
        <h3>FREE TRIAL</h3>
        <div>Try it for FREE and see the results for yourself</div>
        <p>Apply on our website, receive packages through express mail, install device following self-service guide, you are all set to enjoy it. Free trial for 30 days. We are so confident that if you don’t like it, send it back and we’ll get you a full refund.</p>
      </div>
    </div>
    <div class="row img-group">
      <div class="col-sm-6 col-xs-12 module2">
        <img src="assets/images/1.jpg" width="100%">
        <div class="black-tip" style="display: none;"></div>
        <div class="content-tip">
          <p><span>0</span> Hours</p>
          <p>Down Time</p>
          <div style="display: none">
            Spending hours for inventory audit or battery check instead of generating profit? It is the past with ZUS.ai. Car locations and battery levels are being monitored in real time, so dedicate stock-taking time is no longer required.
          </div>
        </div>
        <img src="assets/images/arrow.png" class="m-show arrow" width="20px">
      </div>
      <div class="col-sm-6 col-xs-12 module2">
        <img src="assets/images/2.jpg" width="100%">
        <div class="black-tip" style="display: none;"></div>
        <div class="content-tip">
          <p><span>35</span> Minutes</p>
          <p>Sell Faster</p>
          <div style="display: none">
            It takes 3.5 cars being checked for each sale. Reduce the risk of customers losing patience and interest by using ZUS.ai to save over 35 minutes for finding cars and avoid battery health problems.
          </div>
        </div>
        <img src="assets/images/arrow.png" class="m-show arrow" width="20px">
      </div>
    </div>
    <div class="row middle pc-show">
      <div class="content">
        <h3>FREE TRIAL</h3>
        <div>Try it for FREE and see the results for yourself</div>
        <p>Apply on our website, receive packages through express mail, install device following self-service guide, you are all set to enjoy it. Free trial for 30 days. We are so confident that if you don’t like it, send it back and we’ll get you a full refund.</p>
      </div>
    </div>
    <div class="row img-group">
      <div class="col-sm-6 col-xs-12 module2">
        <img src="assets/images/3.jpg" width="100%">
        <div class="black-tip" style="display: none;"></div>
        <div class="content-tip">
          <p><span>1</span> Million</p>
          <p>Users Tested Hardware</p>
          <div style="display: none">
            For the first time, the best consumer proved smart hardware is being used in enterprise service. ZUS Connected Car System has won numerous iF & RedDot awards and is being used by millions of consumers for several years. Durability and usability proved.
          </div>
        </div>
        <img src="assets/images/arrow.png" class="m-show arrow" width="20px">
      </div>
      <div class="col-sm-6 col-xs-12 module2">
        <img src="assets/images/4.jpg" width="100%">
        <div class="black-tip" style="display: none;"></div>
        <div class="content-tip">
          <p><span>500%</span></p>
          <p>More Service Revenue</p>
          <div style="display: none">
            Is customer not returning for service? With ZUS.ai Smart Connector, your customers get constant monitoring of their vehicle health status and service recommendations before things go wrong. A new way to bring your customer back for proper service and maintenance.
          </div>
        </div>
        <img src="assets/images/arrow.png" class="m-show arrow" width="20px">
      </div>
    </div>
  </div>
  <div class="module-roi section" id="roi">
    <div class="roi-title m-show">
      ROI<br /> CALACULATION FOR CONNECTED LOT MANAGEMENT
    </div>
    <div class="roi-content">
      <p class="des">According to NADA research, most U.S Light-Vehicle dealership spends 48 dedicated hours per month for inventory auditing.<br /> Let’s calculate how much $$$ that ZUS.ai can save.</p>
      <p class="ul-title">Typical U.S dealership data:</p>
      <ul>
        <li>135 Vehicles inventory per store</li>
        <li>31 employees per store (Average Salary=$156/day)</li>
        <li>$12,532 per month building rental</li>
        <li>$61,375 net profit per month</li>
      </ul>
      <img id="roi_img" src="assets/images/roi1.svg">
    </div>
    <div class="footer">
      <div class="footer-content">
        <p>Unleash the most potential for your dealership</p>
        <div class="button-group">
          <form method="POST" action="https://nonda566.activehosted.com/proc.php" id="_form_72_" class="_form _form_72 _inline-form  _dark" novalidate>
            <input type="hidden" name="u" value="72" />
            <input type="hidden" name="f" value="72" />
            <input type="hidden" name="s" />
            <input type="hidden" name="c" value="0" />
            <input type="hidden" name="m" value="0" />
            <input type="hidden" name="act" value="sub" />
            <input type="hidden" name="v" value="2" />
            <div class="_form-content">
              <div class="_form_element _x76950146 _full_width " >
                <div class="_field-wrapper">
                  <input type="text" name="email" placeholder="Enter your email to get free trail" required/>
                </div>
              </div>
              <div class="_button-wrapper _full_width">
                <button id="_form_72_submit" class="_submit" type="submit">
                  Submit
                </button>
              </div>
              <div class="_clear-element">
              </div>
            </div>
            <div class="_form-thank-you" style="display:none;">
            </div>
          </form>
        </div>
      </div>
    </div>
    <div class="footer-2">
      <div class="row">
        <div class="col-sm-5 col-xs-12">
          <img src="assets/images/logo.svg" width="20%">
          <p>© Copyright No NDA Inc., All Rights Reserved</p>
          <p class="email"><img src="assets/images/email.svg" width="16px" style="margin-bottom: 0px;">&nbsp;&nbsp;<a href="mailto:dealerships@nonda.us" style="color: grey">dealerships@nonda.us</a></p>
        </div>
        <div class="col-sm-7 col-xs-12">
          <div class="col-sm-6 col-xs-6 click-item">
            <p><a href="#home">About us</a></p>
            <p><a href="#solution">Solutions</a></p>
          </div>
          <div class="col-sm-6 col-xs-6 click-item">
            <p><a href="#roi">ROI</a></p>
            <p><a target="_blank" class="login" href="<%='/login' %>">Login</a></p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script src="assets/js/jquery.min.js"></script>
<script src="assets/js/bootstrap.min.js"></script>
<!--<script src="assets/js/video.min.js"></script>-->
<!--    <script src="assets/js/jquery.slimscroll.js"></script>-->
<!--    <script src="assets/js/jquery.fullPage.min.js"></script>-->
<!--<script src="assets/js/index.js"></script>-->
<script>
  // var player = videojs('example_video_1', {
  //     muted: true,
  //     controls: true,
  //     loop: true,
  // }, function () {
  //     this.on('play', function () {
  //         console.log("play")
  //     })
  // });
  window.cfields = [];
  window._show_thank_you = function(id, message, trackcmp_url) {
    var form = document.getElementById('_form_' + id + '_'), thank_you = form.querySelector('._form-thank-you');
    form.querySelector('._form-content').style.display = 'none';
    thank_you.innerHTML = message;
    thank_you.style.display = 'block';
    if (typeof(trackcmp_url) != 'undefined' && trackcmp_url) {
      // Site tracking URL to use after inline form submission.
      _load_script(trackcmp_url);
    }
    if (typeof window._form_callback !== 'undefined') window._form_callback(id);
  };
  window._show_error = function(id, message, html) {
    var form = document.getElementById('_form_' + id + '_'), err = document.createElement('div'), button = form.querySelector('button'), old_error = form.querySelector('._form_error');
    if (old_error) old_error.parentNode.removeChild(old_error);
    err.innerHTML = message;
    err.className = '_error-inner _form_error _no_arrow';
    var wrapper = document.createElement('div');
    wrapper.className = '_form-inner';
    wrapper.appendChild(err);
    button.parentNode.insertBefore(wrapper, button);
    document.querySelector('[id^="_form"][id$="_submit"]').disabled = false;
    if (html) {
      var div = document.createElement('div');
      div.className = '_error-html';
      div.innerHTML = html;
      err.appendChild(div);
    }
  };
  window._load_script = function(url, callback) {
    var head = document.querySelector('head'), script = document.createElement('script'), r = false;
    script.type = 'text/javascript';
    script.charset = 'utf-8';
    script.src = url;
    if (callback) {
      script.onload = script.onreadystatechange = function() {
        if (!r && (!this.readyState || this.readyState == 'complete')) {
          r = true;
          callback();
        }
      };
    }
    head.appendChild(script);
  };
  (function() {
    if (window.location.search.search("excludeform") !== -1) return false;
    var getCookie = function(name) {
      var match = document.cookie.match(new RegExp('(^|; )' + name + '=([^;]+)'));
      return match ? match[2] : null;
    }
    var setCookie = function(name, value) {
      var now = new Date();
      var time = now.getTime();
      var expireTime = time + 1000 * 60 * 60 * 24 * 365;
      now.setTime(expireTime);
      document.cookie = name + '=' + value + '; expires=' + now + ';path=/';
    }
    var addEvent = function(element, event, func) {
      if (element.addEventListener) {
        element.addEventListener(event, func);
      } else {
        var oldFunc = element['on' + event];
        element['on' + event] = function() {
          oldFunc.apply(this, arguments);
          func.apply(this, arguments);
        };
      }
    }
    var _removed = false;
    var form_to_submit = document.getElementById('_form_68_');
    var allInputs = form_to_submit.querySelectorAll('input, select, textarea'), tooltips = [], submitted = false;

    var getUrlParam = function(name) {
      var regexStr = '[\?&]' + name + '=([^&#]*)';
      var results = new RegExp(regexStr, 'i').exec(window.location.href);
      return results != undefined ? decodeURIComponent(results[1]) : false;
    };

    for (var i = 0; i < allInputs.length; i++) {
      var regexStr = "field\\[(\\d+)\\]";
      var results = new RegExp(regexStr).exec(allInputs[i].name);
      if (results != undefined) {
        allInputs[i].dataset.name = window.cfields[results[1]];
      } else {
        allInputs[i].dataset.name = allInputs[i].name;
      }
      var fieldVal = getUrlParam(allInputs[i].dataset.name);

      if (fieldVal) {
        if (allInputs[i].type == "radio" || allInputs[i].type == "checkbox") {
          if (allInputs[i].value == fieldVal) {
            allInputs[i].checked = true;
          }
        } else {
          allInputs[i].value = fieldVal;
        }
      }
    }

    var remove_tooltips = function() {
      for (var i = 0; i < tooltips.length; i++) {
        tooltips[i].tip.parentNode.removeChild(tooltips[i].tip);
      }
      tooltips = [];
    };
    var remove_tooltip = function(elem) {
      for (var i = 0; i < tooltips.length; i++) {
        if (tooltips[i].elem === elem) {
          tooltips[i].tip.parentNode.removeChild(tooltips[i].tip);
          tooltips.splice(i, 1);
          return;
        }
      }
    };
    var create_tooltip = function(elem, text) {
      var tooltip = document.createElement('div'), arrow = document.createElement('div'), inner = document.createElement('div'), new_tooltip = {};
      if (elem.type != 'radio' && elem.type != 'checkbox') {
        tooltip.className = '_error';
        arrow.className = '_error-arrow';
        inner.className = '_error-inner';
        inner.innerHTML = text;
        tooltip.appendChild(arrow);
        tooltip.appendChild(inner);
        elem.parentNode.appendChild(tooltip);
      } else {
        tooltip.className = '_error-inner _no_arrow';
        tooltip.innerHTML = text;
        elem.parentNode.insertBefore(tooltip, elem);
        new_tooltip.no_arrow = true;
      }
      new_tooltip.tip = tooltip;
      new_tooltip.elem = elem;
      tooltips.push(new_tooltip);
      return new_tooltip;
    };
    var resize_tooltip = function(tooltip) {
      var rect = tooltip.elem.getBoundingClientRect();
      var doc = document.documentElement, scrollPosition = rect.top - ((window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0));
      if (scrollPosition < 40) {
        tooltip.tip.className = tooltip.tip.className.replace(/ ?(_above|_below) ?/g, '') + ' _below';
      } else {
        tooltip.tip.className = tooltip.tip.className.replace(/ ?(_above|_below) ?/g, '') + ' _above';
      }
    };
    var resize_tooltips = function() {
      if (_removed) return;
      for (var i = 0; i < tooltips.length; i++) {
        if (!tooltips[i].no_arrow) resize_tooltip(tooltips[i]);
      }
    };
    var validate_field = function(elem, remove) {
      var tooltip = null, value = elem.value, no_error = true;
      remove ? remove_tooltip(elem) : false;
      if (elem.type != 'checkbox') elem.className = elem.className.replace(/ ?_has_error ?/g, '');
      if (elem.getAttribute('required') !== null) {
        if (elem.type == 'radio' || (elem.type == 'checkbox' && /any/.test(elem.className))) {
          var elems = form_to_submit.elements[elem.name];
          if (!(elems instanceof NodeList || elems instanceof HTMLCollection) || elems.length <= 1) {
            no_error = elem.checked;
          }
          else {
            no_error = false;
            for (var i = 0; i < elems.length; i++) {
              if (elems[i].checked) no_error = true;
            }
          }
          if (!no_error) {
            tooltip = create_tooltip(elem, "Please select an option.");
          }
        } else if (elem.type =='checkbox') {
          var elems = form_to_submit.elements[elem.name], found = false, err = [];
          no_error = true;
          for (var i = 0; i < elems.length; i++) {
            if (elems[i].getAttribute('required') === null) continue;
            if (!found && elems[i] !== elem) return true;
            found = true;
            elems[i].className = elems[i].className.replace(/ ?_has_error ?/g, '');
            if (!elems[i].checked) {
              no_error = false;
              elems[i].className = elems[i].className + ' _has_error';
              err.push("Checking %s is required".replace("%s", elems[i].value));
            }
          }
          if (!no_error) {
            tooltip = create_tooltip(elem, err.join('<br/>'));
          }
        } else if (elem.tagName == 'SELECT') {
          var selected = true;
          if (elem.multiple) {
            selected = false;
            for (var i = 0; i < elem.options.length; i++) {
              if (elem.options[i].selected) {
                selected = true;
                break;
              }
            }
          } else {
            for (var i = 0; i < elem.options.length; i++) {
              if (elem.options[i].selected && !elem.options[i].value) {
                selected = false;
              }
            }
          }
          if (!selected) {
            elem.className = elem.className + ' _has_error';
            no_error = false;
            tooltip = create_tooltip(elem, "Please select an option.");
          }
        } else if (value === undefined || value === null || value === '') {
          elem.className = elem.className + ' _has_error';
          no_error = false;
          tooltip = create_tooltip(elem, "This field is required.");
        }
      }
      if (no_error && elem.name == 'email') {
        if (!value.match(/^[\+_a-z0-9-'&=]+(\.[\+_a-z0-9-']+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,})$/i)) {
          elem.className = elem.className + ' _has_error';
          no_error = false;
          tooltip = create_tooltip(elem, "Enter a valid email address.");
        }
      }
      if (no_error && /date_field/.test(elem.className)) {
        if (!value.match(/^\d\d\d\d-\d\d-\d\d$/)) {
          elem.className = elem.className + ' _has_error';
          no_error = false;
          tooltip = create_tooltip(elem, "Enter a valid date.");
        }
      }
      tooltip ? resize_tooltip(tooltip) : false;
      return no_error;
    };
    var needs_validate = function(el) {
      return el.name == 'email' || el.getAttribute('required') !== null;
    };
    var validate_form = function(e) {
      var err = form_to_submit.querySelector('._form_error'), no_error = true;
      if (!submitted) {
        submitted = true;
        for (var i = 0, len = allInputs.length; i < len; i++) {
          var input = allInputs[i];
          if (needs_validate(input)) {
            if (input.type == 'text') {
              addEvent(input, 'blur', function() {
                this.value = this.value.trim();
                validate_field(this, true);
              });
              addEvent(input, 'input', function() {
                validate_field(this, true);
              });
            } else if (input.type == 'radio' || input.type == 'checkbox') {
              (function(el) {
                var radios = form_to_submit.elements[el.name];
                for (var i = 0; i < radios.length; i++) {
                  addEvent(radios[i], 'click', function() {
                    validate_field(el, true);
                  });
                }
              })(input);
            } else if (input.tagName == 'SELECT') {
              addEvent(input, 'change', function() {
                validate_field(this, true);
              });
            } else if (input.type == 'textarea'){
              addEvent(input, 'input', function() {
                validate_field(this, true);
              });
            }
          }
        }
      }
      remove_tooltips();
      for (var i = 0, len = allInputs.length; i < len; i++) {
        var elem = allInputs[i];
        if (needs_validate(elem)) {
          if (elem.tagName.toLowerCase() !== "select") {
            elem.value = elem.value.trim();
          }
          validate_field(elem) ? true : no_error = false;
        }
      }
      if (!no_error && e) {
        e.preventDefault();
      }
      resize_tooltips();
      return no_error;
    };
    // addEvent(window, 'resize', resize_tooltips);
    // addEvent(window, 'scroll', resize_tooltips);
    window._old_serialize = null;
    if (typeof serialize !== 'undefined') window._old_serialize = window.serialize;
    _load_script("https://d3rxaij56vjege.cloudfront.net/form-serialize/0.3/serialize.min.js", function() {
      window._form_serialize = window.serialize;
      if (window._old_serialize) window.serialize = window._old_serialize;
    });
    var form_submit = function(e) {
      e.preventDefault();
      if (validate_form()) {
        // use this trick to get the submit button & disable it using plain javascript
        document.querySelector('#_form_68_submit').disabled = true;
        var serialized = _form_serialize(document.getElementById('_form_68_'));
        var err = form_to_submit.querySelector('._form_error');
        err ? err.parentNode.removeChild(err) : false;
        _load_script('https://nonda566.activehosted.com/proc.php?' + serialized + '&jsonp=true');
      }
      return false;
    };
    addEvent(form_to_submit, 'submit', form_submit);
  })();

</script>
<script type="text/javascript">
  window.cfields = [];
  window._show_thank_you = function(id, message, trackcmp_url) {
    var form = document.getElementById('_form_' + id + '_'), thank_you = form.querySelector('._form-thank-you');
    form.querySelector('._form-content').style.display = 'none';
    thank_you.innerHTML = message;
    thank_you.style.display = 'block';
    if (typeof(trackcmp_url) != 'undefined' && trackcmp_url) {
      // Site tracking URL to use after inline form submission.
      _load_script(trackcmp_url);
    }
    if (typeof window._form_callback !== 'undefined') window._form_callback(id);
  };
  window._show_error = function(id, message, html) {
    var form = document.getElementById('_form_' + id + '_'), err = document.createElement('div'), button = form.querySelector('button'), old_error = form.querySelector('._form_error');
    if (old_error) old_error.parentNode.removeChild(old_error);
    err.innerHTML = message;
    err.className = '_error-inner _form_error _no_arrow';
    var wrapper = document.createElement('div');
    wrapper.className = '_form-inner';
    wrapper.appendChild(err);
    button.parentNode.insertBefore(wrapper, button);
    document.querySelector('[id^="_form"][id$="_submit"]').disabled = false;
    if (html) {
      var div = document.createElement('div');
      div.className = '_error-html';
      div.innerHTML = html;
      err.appendChild(div);
    }
  };
  window._load_script = function(url, callback) {
    var head = document.querySelector('head'), script = document.createElement('script'), r = false;
    script.type = 'text/javascript';
    script.charset = 'utf-8';
    script.src = url;
    if (callback) {
      script.onload = script.onreadystatechange = function() {
        if (!r && (!this.readyState || this.readyState == 'complete')) {
          r = true;
          callback();
        }
      };
    }
    head.appendChild(script);
  };
  (function() {
    if (window.location.search.search("excludeform") !== -1) return false;
    var getCookie = function(name) {
      var match = document.cookie.match(new RegExp('(^|; )' + name + '=([^;]+)'));
      return match ? match[2] : null;
    }
    var setCookie = function(name, value) {
      var now = new Date();
      var time = now.getTime();
      var expireTime = time + 1000 * 60 * 60 * 24 * 365;
      now.setTime(expireTime);
      document.cookie = name + '=' + value + '; expires=' + now + ';path=/';
    }
    var addEvent = function(element, event, func) {
      if (element.addEventListener) {
        element.addEventListener(event, func);
      } else {
        var oldFunc = element['on' + event];
        element['on' + event] = function() {
          oldFunc.apply(this, arguments);
          func.apply(this, arguments);
        };
      }
    }
    var _removed = false;
    var form_to_submit = document.getElementById('_form_72_');
    var allInputs = form_to_submit.querySelectorAll('input, select, textarea'), tooltips = [], submitted = false;

    var getUrlParam = function(name) {
      var regexStr = '[\?&]' + name + '=([^&#]*)';
      var results = new RegExp(regexStr, 'i').exec(window.location.href);
      return results != undefined ? decodeURIComponent(results[1]) : false;
    };

    for (var i = 0; i < allInputs.length; i++) {
      var regexStr = "field\\[(\\d+)\\]";
      var results = new RegExp(regexStr).exec(allInputs[i].name);
      if (results != undefined) {
        allInputs[i].dataset.name = window.cfields[results[1]];
      } else {
        allInputs[i].dataset.name = allInputs[i].name;
      }
      var fieldVal = getUrlParam(allInputs[i].dataset.name);

      if (fieldVal) {
        if (allInputs[i].type == "radio" || allInputs[i].type == "checkbox") {
          if (allInputs[i].value == fieldVal) {
            allInputs[i].checked = true;
          }
        } else {
          allInputs[i].value = fieldVal;
        }
      }
    }

    var remove_tooltips = function() {
      for (var i = 0; i < tooltips.length; i++) {
        tooltips[i].tip.parentNode.removeChild(tooltips[i].tip);
      }
      tooltips = [];
    };
    var remove_tooltip = function(elem) {
      for (var i = 0; i < tooltips.length; i++) {
        if (tooltips[i].elem === elem) {
          tooltips[i].tip.parentNode.removeChild(tooltips[i].tip);
          tooltips.splice(i, 1);
          return;
        }
      }
    };
    var create_tooltip = function(elem, text) {
      var tooltip = document.createElement('div'), arrow = document.createElement('div'), inner = document.createElement('div'), new_tooltip = {};
      if (elem.type != 'radio' && elem.type != 'checkbox') {
        tooltip.className = '_error';
        arrow.className = '_error-arrow';
        inner.className = '_error-inner';
        inner.innerHTML = text;
        tooltip.appendChild(arrow);
        tooltip.appendChild(inner);
        elem.parentNode.appendChild(tooltip);
      } else {
        tooltip.className = '_error-inner _no_arrow';
        tooltip.innerHTML = text;
        elem.parentNode.insertBefore(tooltip, elem);
        new_tooltip.no_arrow = true;
      }
      new_tooltip.tip = tooltip;
      new_tooltip.elem = elem;
      tooltips.push(new_tooltip);
      return new_tooltip;
    };
    var resize_tooltip = function(tooltip) {
      var rect = tooltip.elem.getBoundingClientRect();
      var doc = document.documentElement, scrollPosition = rect.top - ((window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0));
      if (scrollPosition < 40) {
        tooltip.tip.className = tooltip.tip.className.replace(/ ?(_above|_below) ?/g, '') + ' _below';
      } else {
        tooltip.tip.className = tooltip.tip.className.replace(/ ?(_above|_below) ?/g, '') + ' _above';
      }
    };
    var resize_tooltips = function() {
      if (_removed) return;
      for (var i = 0; i < tooltips.length; i++) {
        if (!tooltips[i].no_arrow) resize_tooltip(tooltips[i]);
      }
    };
    var validate_field = function(elem, remove) {
      var tooltip = null, value = elem.value, no_error = true;
      remove ? remove_tooltip(elem) : false;
      if (elem.type != 'checkbox') elem.className = elem.className.replace(/ ?_has_error ?/g, '');
      if (elem.getAttribute('required') !== null) {
        if (elem.type == 'radio' || (elem.type == 'checkbox' && /any/.test(elem.className))) {
          var elems = form_to_submit.elements[elem.name];
          if (!(elems instanceof NodeList || elems instanceof HTMLCollection) || elems.length <= 1) {
            no_error = elem.checked;
          }
          else {
            no_error = false;
            for (var i = 0; i < elems.length; i++) {
              if (elems[i].checked) no_error = true;
            }
          }
          if (!no_error) {
            tooltip = create_tooltip(elem, "Please select an option.");
          }
        } else if (elem.type =='checkbox') {
          var elems = form_to_submit.elements[elem.name], found = false, err = [];
          no_error = true;
          for (var i = 0; i < elems.length; i++) {
            if (elems[i].getAttribute('required') === null) continue;
            if (!found && elems[i] !== elem) return true;
            found = true;
            elems[i].className = elems[i].className.replace(/ ?_has_error ?/g, '');
            if (!elems[i].checked) {
              no_error = false;
              elems[i].className = elems[i].className + ' _has_error';
              err.push("Checking %s is required".replace("%s", elems[i].value));
            }
          }
          if (!no_error) {
            tooltip = create_tooltip(elem, err.join('<br/>'));
          }
        } else if (elem.tagName == 'SELECT') {
          var selected = true;
          if (elem.multiple) {
            selected = false;
            for (var i = 0; i < elem.options.length; i++) {
              if (elem.options[i].selected) {
                selected = true;
                break;
              }
            }
          } else {
            for (var i = 0; i < elem.options.length; i++) {
              if (elem.options[i].selected && !elem.options[i].value) {
                selected = false;
              }
            }
          }
          if (!selected) {
            elem.className = elem.className + ' _has_error';
            no_error = false;
            tooltip = create_tooltip(elem, "Please select an option.");
          }
        } else if (value === undefined || value === null || value === '') {
          elem.className = elem.className + ' _has_error';
          no_error = false;
          tooltip = create_tooltip(elem, "This field is required.");
        }
      }
      if (no_error && elem.name == 'email') {
        if (!value.match(/^[\+_a-z0-9-'&=]+(\.[\+_a-z0-9-']+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,})$/i)) {
          elem.className = elem.className + ' _has_error';
          no_error = false;
          tooltip = create_tooltip(elem, "Enter a valid email address.");
        }
      }
      if (no_error && /date_field/.test(elem.className)) {
        if (!value.match(/^\d\d\d\d-\d\d-\d\d$/)) {
          elem.className = elem.className + ' _has_error';
          no_error = false;
          tooltip = create_tooltip(elem, "Enter a valid date.");
        }
      }
      tooltip ? resize_tooltip(tooltip) : false;
      return no_error;
    };
    var needs_validate = function(el) {
      return el.name == 'email' || el.getAttribute('required') !== null;
    };
    var validate_form = function(e) {
      var err = form_to_submit.querySelector('._form_error'), no_error = true;
      if (!submitted) {
        submitted = true;
        for (var i = 0, len = allInputs.length; i < len; i++) {
          var input = allInputs[i];
          if (needs_validate(input)) {
            if (input.type == 'text') {
              addEvent(input, 'blur', function() {
                this.value = this.value.trim();
                validate_field(this, true);
              });
              addEvent(input, 'input', function() {
                validate_field(this, true);
              });
            } else if (input.type == 'radio' || input.type == 'checkbox') {
              (function(el) {
                var radios = form_to_submit.elements[el.name];
                for (var i = 0; i < radios.length; i++) {
                  addEvent(radios[i], 'click', function() {
                    validate_field(el, true);
                  });
                }
              })(input);
            } else if (input.tagName == 'SELECT') {
              addEvent(input, 'change', function() {
                validate_field(this, true);
              });
            } else if (input.type == 'textarea'){
              addEvent(input, 'input', function() {
                validate_field(this, true);
              });
            }
          }
        }
      }
      remove_tooltips();
      for (var i = 0, len = allInputs.length; i < len; i++) {
        var elem = allInputs[i];
        if (needs_validate(elem)) {
          if (elem.tagName.toLowerCase() !== "select") {
            elem.value = elem.value.trim();
          }
          validate_field(elem) ? true : no_error = false;
        }
      }
      if (!no_error && e) {
        e.preventDefault();
      }
      resize_tooltips();
      return no_error;
    };
    addEvent(window, 'resize', resize_tooltips);
    addEvent(window, 'scroll', resize_tooltips);
    // window._old_serialize = null;
    // if (typeof serialize !== 'undefined') window._old_serialize = window.serialize;
    // _load_script("//d3rxaij56vjege.cloudfront.net/form-serialize/0.3/serialize.min.js", function() {
    //     window._form_serialize = window.serialize;
    //     if (window._old_serialize) window.serialize = window._old_serialize;
    // });
    var form_submit = function(e) {
      e.preventDefault();
      if (validate_form()) {
        // use this trick to get the submit button & disable it using plain javascript
        document.querySelector('#_form_72_submit').disabled = true;
        var serialized = _form_serialize(document.getElementById('_form_72_'));
        var err = form_to_submit.querySelector('._form_error');
        err ? err.parentNode.removeChild(err) : false;
        _load_script('https://nonda566.activehosted.com/proc.php?' + serialized + '&jsonp=true');
      }
      return false;
    };
    addEvent(form_to_submit, 'submit', form_submit);
  })();

</script>
</body>
</html>

